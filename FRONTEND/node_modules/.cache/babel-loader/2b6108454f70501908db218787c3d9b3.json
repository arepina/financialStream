{"ast":null,"code":"var _jsxFileName = \"C:\\\\team20project\\\\frontend\\\\src\\\\containers\\\\Login.js\";\nimport React, { Component } from \"react\";\nimport { Button, FormGroup, FormControl, ControlLabel } from \"react-bootstrap\"; // import { Link } from \"react-router-bootstrap\";\n\nimport { NavLink } from \"react-router-dom\";\nimport \"./Login.css\";\nexport default class Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.id]: event.target.value\n      });\n    };\n\n    this.handleLoginSubmit = async event => {\n      event.preventDefault();\n      fetch('https://jsonplaceholder.typicode.com/posts', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          login: this.state.email,\n          password: this.state.password\n        }),\n        //credentials: 'same-origin'\n        mode: \"cors\"\n      }).then(res => res).then(result => {\n        console.log(result);\n\n        if (parseInt(result.status / 100) === 2) {\n          this.setState({\n            loggedInStatus: true\n          });\n        } else {\n          alert(\"Login failed. Please try again.\");\n          this.setState({\n            loggedInStatus: false\n          });\n        }\n      }, error => {\n        console.error(\"Login error!\");\n        alert(\"Login failed. Please try again.\");\n        this.setState({\n          loggedInStatus: false\n        });\n      });\n    };\n\n    this.handleDisplayDataSubmit = async event => {\n      event.preventDefault();\n      fetch('https://jsonplaceholder.typicode.com/posts', {\n        method: 'GET',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        //credentials: 'same-origin'\n        mode: \"cors\"\n      }).then(res => res).then(result => {\n        console.log(result);\n\n        if (parseInt(result.status / 100) === 2) {\n          this.setState({\n            connectStatus: true\n          });\n          console.log(\"connect status: \" + this.state.connectStatus);\n          this.props.history.push('/displaydata', {\n            status: true\n          });\n        } else {\n          this.setState({\n            connectStatus: false\n          });\n          this.props.history.push('/displaydata', {\n            status: false\n          });\n        }\n      }, error => {\n        this.setState({\n          connectStatus: false\n        });\n        this.props.history.push('/displaydata', {\n          status: false\n        });\n      });\n    };\n\n    this.state = {\n      username: \"\",\n      password: \"\",\n      loggedInStatus: false,\n      connectStatus: false\n    };\n  }\n\n  validateForm() {\n    return this.state.username.length > 0 && this.state.password.length > 0;\n  }\n\n  renderSuccess() {\n    return React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"Connection Successful!\");\n  }\n\n  renderFail() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"Connection Fail!\"), React.createElement(NavLink, {\n      to: {\n        pathname: \"/\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \" Retry \"));\n  }\n\n  renderLogin() {\n    return React.createElement(\"div\", {\n      className: \"Login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleLoginSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      controlId: \"username\",\n      bsSize: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(ControlLabel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \"Username\"), React.createElement(FormControl, {\n      autoFocus: true,\n      value: this.state.Username,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      controlId: \"password\",\n      bsSize: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(ControlLabel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"Password\"), React.createElement(FormControl, {\n      value: this.state.password,\n      onChange: this.handleChange,\n      type: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    })), React.createElement(Button, {\n      style: {\n        background: '#0018A8',\n        color: 'white'\n      },\n      block: true,\n      bsSize: \"large\",\n      disabled: !this.validateForm(),\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, \"Login\")));\n  }\n\n  renderDisplayData() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, \" Successsfully connected!\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, \" Data here!\"));\n  }\n\n  render() {\n    const divStyle = {\n      justifycontent: 'center',\n      display: 'grid'\n    };\n\n    if (this.state.loggedInStatus) {\n      return React.createElement(\"div\", {\n        style: divStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        style: {\n          textAlign: 'center',\n          fontWeight: 'bold'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, \" Login Successsfully!\"), React.createElement(Button, {\n        style: {\n          background: '#0018A8',\n          color: 'white'\n        },\n        onClick: this.handleDisplayDataSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, \" Continue \"));\n    } else {\n      return this.renderLogin();\n    }\n  }\n\n}","map":{"version":3,"sources":["C:\\team20project\\frontend\\src\\containers\\Login.js"],"names":["React","Component","Button","FormGroup","FormControl","ControlLabel","NavLink","Login","constructor","props","handleChange","event","setState","target","id","value","handleLoginSubmit","preventDefault","fetch","method","headers","body","JSON","stringify","login","state","email","password","mode","then","res","result","console","log","parseInt","status","loggedInStatus","alert","error","handleDisplayDataSubmit","connectStatus","history","push","username","validateForm","length","renderSuccess","renderFail","pathname","renderLogin","Username","background","color","renderDisplayData","render","divStyle","justifycontent","display","textAlign","fontWeight"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Button, FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\r\n// import { Link } from \"react-router-bootstrap\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport \"./Login.css\";\r\n\r\nexport default class Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      loggedInStatus: false,\r\n      connectStatus: false\r\n    };\r\n  }\r\n\r\n  validateForm() {\r\n    return this.state.username.length > 0 && this.state.password.length > 0;\r\n  }\r\n\r\n  handleChange = event => {\r\n    this.setState({\r\n      [event.target.id]: event.target.value\r\n    });\r\n  }\r\n\r\n  handleLoginSubmit = async event => {\r\n    event.preventDefault();\r\n\r\n    fetch('https://jsonplaceholder.typicode.com/posts', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        login: this.state.email,\r\n        password: this.state.password,\r\n      }),\r\n      //credentials: 'same-origin'\r\n      mode: \"cors\"\r\n    })\r\n      .then(res => res)\r\n      .then(\r\n        (result) => {\r\n          console.log(result);\r\n          if (parseInt(result.status / 100) === 2) {\r\n            this.setState({\r\n              loggedInStatus: true\r\n            })\r\n          }\r\n          else {\r\n            alert(\"Login failed. Please try again.\")\r\n            this.setState({\r\n              loggedInStatus: false\r\n            })\r\n          }\r\n        },\r\n        (error) => {\r\n          console.error(\"Login error!\")\r\n          alert(\"Login failed. Please try again.\")\r\n          this.setState({\r\n            loggedInStatus: false\r\n          })\r\n        }\r\n      )\r\n  }\r\n\r\n  handleDisplayDataSubmit = async event => {\r\n    event.preventDefault();\r\n\r\n    fetch('https://jsonplaceholder.typicode.com/posts', {\r\n      method: 'GET',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n      },\r\n      //credentials: 'same-origin'\r\n      mode: \"cors\"\r\n    })\r\n      .then(res => res)\r\n      .then(\r\n        (result) => {\r\n          console.log(result);\r\n          if (parseInt(result.status / 100) === 2) {\r\n            this.setState ({\r\n              connectStatus: true\r\n            })\r\n            console.log(\"connect status: \" + this.state.connectStatus)\r\n            this.props.history.push('/displaydata', { status: true});\r\n          }\r\n          else {\r\n            this.setState ({\r\n              connectStatus: false\r\n            })\r\n            this.props.history.push('/displaydata', { status: false});\r\n          }\r\n        },\r\n        (error) => {\r\n          this.setState ({\r\n            connectStatus: false\r\n          })\r\n          this.props.history.push('/displaydata', {status: false});\r\n        }\r\n      )\r\n  }\r\n\r\n  renderSuccess() {\r\n      return (\r\n          <p>Connection Successful!</p>\r\n      )\r\n  }\r\n\r\n  renderFail() {\r\n      return (\r\n          <div>\r\n              <p>Connection Fail!</p>\r\n              <NavLink to={{pathname: \"/\"}} > Retry </NavLink>\r\n          </div>\r\n      )\r\n  }\r\n\r\n\r\n  renderLogin() {\r\n    return (\r\n      <div className=\"Login\">\r\n        <form onSubmit={this.handleLoginSubmit}>\r\n          <FormGroup controlId=\"username\" bsSize=\"large\">\r\n            <ControlLabel>Username</ControlLabel>\r\n            <FormControl\r\n              autoFocus\r\n              value={this.state.Username}\r\n              onChange={this.handleChange}\r\n            />\r\n          </FormGroup>\r\n          <FormGroup controlId=\"password\" bsSize=\"large\">\r\n            <ControlLabel>Password</ControlLabel>\r\n            <FormControl\r\n              value={this.state.password}\r\n              onChange={this.handleChange}\r\n              type=\"password\"\r\n            />\r\n          </FormGroup>\r\n          <Button style={{background:'#0018A8', color: 'white'}}\r\n            block\r\n            bsSize=\"large\"\r\n            disabled={!this.validateForm()}\r\n            type=\"submit\"\r\n          >\r\n            Login\r\n          </Button>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  renderDisplayData() {\r\n    return (\r\n      <div>\r\n        <p> Successsfully connected!</p>\r\n        <p> Data here!</p>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    const divStyle = {\r\n      justifycontent: 'center', \r\n      display: 'grid'\r\n    };\r\n    if (this.state.loggedInStatus) {\r\n      return (\r\n        <div style={divStyle}>\r\n          <p style={{textAlign:'center', fontWeight: 'bold'}}> Login Successsfully!</p>\r\n            <Button  style={{background:'#0018A8', color: 'white'}} onClick={this.handleDisplayDataSubmit}> Continue </Button>\r\n        </div>\r\n      )\r\n    }\r\n    else {\r\n      return (this.renderLogin())\r\n    }\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}