{"ast":null,"code":"import * as tslib_1 from \"tslib\";\nimport { BehaviorSubject } from 'rxjs';\nimport { useState, useEffect, useMemo } from 'react';\nexport function useObservable(inputFactory, initialState, inputs) {\n  var _a = tslib_1.__read(useState(typeof initialState !== 'undefined' ? initialState : null), 2),\n      state = _a[0],\n      setState = _a[1];\n\n  var _b = useMemo(function () {\n    var stateSubject$ = new BehaviorSubject(initialState);\n    var inputSubject$ = new BehaviorSubject(inputs);\n    return {\n      state$: stateSubject$,\n      inputs$: inputSubject$\n    };\n  }, []),\n      state$ = _b.state$,\n      inputs$ = _b.inputs$;\n\n  useEffect(function () {\n    inputs$.next(inputs);\n  }, inputs || []);\n  useEffect(function () {\n    var output$;\n\n    if (inputs) {\n      output$ = inputFactory(inputs$, state$);\n    } else {\n      output$ = inputFactory(state$);\n    }\n\n    var subscription = output$.subscribe(function (value) {\n      state$.next(value);\n      setState(value);\n    });\n    return function () {\n      subscription.unsubscribe();\n      inputs$.complete();\n      state$.complete();\n    };\n  }, []);\n  return state;\n}","map":null,"metadata":{},"sourceType":"module"}