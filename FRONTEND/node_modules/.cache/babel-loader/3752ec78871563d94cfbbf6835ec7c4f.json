{"ast":null,"code":"var _jsxFileName = \"C:\\\\team20project\\\\frontend\\\\src\\\\containers\\\\DisplayData.js\";\nimport React, { Component } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport \"./DisplayData.css\";\nimport { Bar } from 'react-chartjs-2';\nimport { Line } from 'react-chartjs-2';\nimport Loader from 'react-loader-spinner';\nimport DateTimePicker from 'react-datetime-picker';\nimport GetData from './GetData';\nexport default class DisplayData extends Component {\n  // this.state.chartsData.realisedAggregated\n  // this.state.chartsData.effectiveAggregated\n  constructor(props) {\n    super(props);\n    this.EndingDealers = {\n      labels: [\"Lewis Astronomica\", \"Lewis Borealis\", \"Lewis Celestial\", \"Lewis Deuteronic\", \"Lewis Eclipse\", \"Lewis Floral\", \"Lewis Galactia\", \"Lewis Heliosphere\", \"Lewis Interstella\", \"Lewis Jupiter\", \"Lewis Koronis\", \"Lewis Lunatic\", \"Selvyn Astronomica\", \"Selvyn Borealis\", \"Selvyn Celestial\", \"Selvyn Deuteronic\", \"Selvyn Eclipse\", \"Selvyn Floral\", \"Selvyn Galactia\", \"Selvyn Heliosphere\", \"Selvyn Interstella\", \"Selvyn Jupiter\", \"Selvyn Koronis\", \"Selvyn Lunatic\", \"Richard Astronomica\", \"Richard Borealis\", \"Richard Celestial\", \"Richard Deuteronic\", \"Richard Eclipse\", \"Richard Floral\", \"Richard Galactia\", \"Richard Heliosphere\", \"Richard Interstella\", \"Richard Jupiter\", \"Richard Koronis\", \"Richard Lunatic\", \"Lina Astronomica\", \"Lina Borealis\", \"Lina Celestial\", \"Lina Deuteronic\", \"Lina Eclipse\", \"Lina Floral\", \"Lina Galactia\", \"Lina Heliosphere\", \"Lina Interstella\", \"Lina Jupiter\", \"Lina Koronis\", \"Lina Lunatic\", \"John Astronomica\", \"John Borealis\", \"John Celestial\", \"John Deuteronic\", \"John Eclipse\", \"John Floral\", \"John Galactia\", \"John Heliosphere\", \"John Interstella\", \"John Jupiter\", \"John Koronis\", \"John Lunatic\", \"Nidia Astronomica\", \"Nidia Borealis\", \"Nidia Celestial\", \"Nidia Deuteronic\", \"Nidia Eclipse\", \"Nidia Floral\", \"Nidia Galactia\", \"Nidia Heliosphere\", \"Nidia Interstella\", \"Nidia Jupiter\", \"Nidia Koronis\", \"Nidia Lunatic\"],\n      datasets: [{\n        label: 'My First dataset',\n        backgroundColor: 'rgba(255,99,132,0.2)',\n        borderColor: 'rgba(255,99,132,1)',\n        borderWidth: 1,\n        hoverBackgroundColor: 'rgba(255,99,132,0.4)',\n        hoverBorderColor: 'rgba(255,99,132,1)',\n        data: [65, 59, 80, 81, 56, 55, 65, 59, 80, 81, 56, 55, 65, 59, 80, 81, 56, 55, 65, 59, 80, 81, 56, 55, 65, 59, 80, 81, 56, 55, 65, 59, 80, 81, 56, 55, 65, 59, 80, 81, 56, 55, 65, 59, 80, 81, 56, 55, 65, 59, 80, 81, 56, 55, 65, 59, 80, 81, 56, 55, 65, 59, 80, 81, 56, 55, 65, 59, 80, 81, 56, 55] // this.state.chartsData.EndingDealers\n\n      }]\n    };\n    this.RealisedDealers = {\n      labels: [\"Lewis\", \"Selvyn\", \"Richard\", \"Lina\", \"John\", \"Nidia\"],\n      datasets: [{\n        label: 'My First dataset',\n        backgroundColor: 'rgba(255,99,132,0.2)',\n        borderColor: 'rgba(255,99,132,1)',\n        borderWidth: 1,\n        hoverBackgroundColor: 'rgba(255,99,132,0.4)',\n        hoverBorderColor: 'rgba(255,99,132,1)',\n        data: [65, 59, 80, 81, 56, 55] // this.state.chartsData.RealisedDealers\n\n      }]\n    };\n    this.effectiveDealers = {\n      labels: [\"Lewis\", \"Selvyn\", \"Richard\", \"Lina\", \"John\", \"Nidia\"],\n      datasets: [{\n        label: 'My First dataset',\n        backgroundColor: 'rgba(255,99,132,0.2)',\n        borderColor: 'rgba(255,99,132,1)',\n        borderWidth: 1,\n        hoverBackgroundColor: 'rgba(255,99,132,0.4)',\n        hoverBorderColor: 'rgba(255,99,132,1)',\n        data: [65, 59, 80, 81, 56, 55] // this.state.chartsData.effectiveDealers\n\n      }]\n    };\n    this.endingAggregated = {\n      labels: [\"Astronomica\", \"Borealis\", \"Celestial\", \"Deuteronic\", \"Eclipse\", \"Floral\", \"Galactia\", \"Heliosphere\", \"Interstella\", \"Jupiter\", \"Koronis\", \"Lunatic\"],\n      datasets: [{\n        label: 'My First dataset',\n        backgroundColor: 'rgba(255,99,132,0.2)',\n        borderColor: 'rgba(255,99,132,1)',\n        borderWidth: 1,\n        hoverBackgroundColor: 'rgba(255,99,132,0.4)',\n        hoverBorderColor: 'rgba(255,99,132,1)',\n        data: [65, 59, 80, 81, 56, 55, 40, 10, 20, 30, 40, 50] // this.state.chartsData.endingAggregated\n\n      }]\n    };\n    this.realisedAggregated = 100500;\n    this.effectiveAggregated = 200400;\n    this.averageData = {\n      labels: [\"Astronomica\", \"Borealis\", \"Celestial\", \"Deuteronic\", \"Eclipse\", \"Floral\", \"Galactia\", \"Heliosphere\", \"Interstella\", \"Jupiter\", \"Koronis\", \"Lunatic\"],\n      datasets: [{\n        label: 'Buy price',\n        fill: false,\n        lineTension: 0.1,\n        backgroundColor: 'rgba(255,192,192,0.4)',\n        borderColor: 'rgba(255,192,192,1)',\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: 'miter',\n        pointBorderColor: 'rgba(255,192,192,1)',\n        pointBackgroundColor: '#fff',\n        pointBorderWidth: 1,\n        pointHoverRadius: 5,\n        pointHoverBackgroundColor: 'rgba(255,192,192,1)',\n        pointHoverBorderColor: 'rgba(220,220,220,1)',\n        pointHoverBorderWidth: 2,\n        pointRadius: 1,\n        pointHitRadius: 10,\n        data: [59, 80, 81, 56, 55, 40, 10, 20, 30, 40, 50, 65] // this.state.chartsData.averageBuy\n\n      }, {\n        label: 'Sell price',\n        fill: false,\n        lineTension: 0.1,\n        backgroundColor: 'rgba(75,192,192,0.4)',\n        borderColor: 'rgba(75,192,192,1)',\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: 'miter',\n        pointBorderColor: 'rgba(75,192,192,1)',\n        pointBackgroundColor: '#fff',\n        pointBorderWidth: 1,\n        pointHoverRadius: 5,\n        pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n        pointHoverBorderColor: 'rgba(220,220,220,1)',\n        pointHoverBorderWidth: 2,\n        pointRadius: 1,\n        pointHitRadius: 10,\n        data: [10, 20, 30, 40, 50, 65, 59, 80, 81, 56, 55, 40] // this.state.chartsData.averageSell\n\n      }]\n    };\n\n    this.handleChartDataSubmit = async event => {\n      var sel = document.getElementById(\"charts\");\n      var id = sel.options[sel.selectedIndex].value;\n      console.log(id);\n      document.getElementById('loader').style.display = 'block';\n      var url = this.getChartsUrl(id);\n      console.log(url);\n      fetch(url, {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          start: document.getElementsByClassName(\"react-datetime-picker__inputGroup\")[0].children[0].value,\n          end: document.getElementsByClassName(\"react-datetime-picker__inputGroup\")[1].children[0].value\n        }),\n        mode: \"cors\"\n      }).then(res => res).then(result => {\n        console.log(result); //todo change the vars\n\n        this.setState({\n          chartsData: result\n        });\n        document.getElementById('loader').style.display = 'none';\n      }, error => {\n        console.log(\"ERROR in charts \" + error);\n        document.getElementById('loader').style.display = 'none';\n      });\n    };\n\n    this.state = {\n      chartsData: \"\"\n    };\n  }\n\n  getChartsUrl(id) {\n    switch (id) {\n      case \"averageData\":\n        return \"http://localhost:5001/average\";\n\n      case \"endingDealers\":\n        return \"http://localhost:5001/dealers_position\";\n\n      case \"realisedDealers\":\n        return \"http://localhost:5001/realised_profit_loss_dealers\";\n\n      case \"effectiveDealers\":\n        return \"http://localhost:5001/effective_profit_loss_dealers\";\n\n      case \"endingAggregated\":\n        return \"http://localhost:5001/aggregated_ending\";\n\n      case \"realisedAggregated\":\n        return \"http://localhost:5001/aggregated_effective\";\n\n      case \"effectiveAggregated\":\n        return \"http://localhost:5001/aggregated_realised\";\n    }\n  }\n\n  renderSuccess() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, React.createElement(GetData, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        alignItems: 'center',\n        textAlign: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      id: \"charts\",\n      onChange: this.handleChartDataSubmit,\n      style: {\n        width: '100%',\n        marginTop: '10px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      disabled: true,\n      selected: true,\n      value: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, \" -- select an option -- \"), React.createElement(\"option\", {\n      value: \"averageData\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, \"Average buy and sell prices for each instrument during the period\"), React.createElement(\"option\", {\n      value: \"endingDealers\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, \"Ending positions for each dealer\"), React.createElement(\"option\", {\n      value: \"realisedDealers\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, \"Realised profit/loss for each dealer\"), React.createElement(\"option\", {\n      value: \"effectiveDealers\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, \"Effective profit/loss for each dealer\"), React.createElement(\"option\", {\n      value: \"endingAggregated\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, \"Ending positions aggregated for all dealers\"), React.createElement(\"option\", {\n      value: \"realisedAggregated\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, \"Realised profit/loss for aggregated for all dealers\"), React.createElement(\"option\", {\n      value: \"effectiveAggregated\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, \"Effective profit/loss aggregated for all dealers\")), React.createElement(\"div\", {\n      style: {\n        display: 'inline-flex',\n        marginTop: '10px',\n        enabled: false,\n        pointerEvents: 'none'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      style: {\n        marginLeft: '10px',\n        marginRight: '10px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, \"Start\"), React.createElement(DateTimePicker, {\n      style: {\n        marginLeft: '10px',\n        marginRight: '10px',\n        enabled: false\n      },\n      amPmAriaLabel: \"Select AM/PM\",\n      calendarAriaLabel: \"Toggle calendar\",\n      clearAriaLabel: \"Clear value\",\n      dayAriaLabel: \"Day\",\n      hourAriaLabel: \"Hour\",\n      maxDetail: \"second\",\n      minuteAriaLabel: \"Minute\",\n      monthAriaLabel: \"Month\",\n      nativeInputAriaLabel: \"Date and time\",\n      secondAriaLabel: \"Second\",\n      value: new Date() - 1000 * 120 // pass 2 min ago for 1 day data\n      ,\n      yearAriaLabel: \"Year\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      style: {\n        marginLeft: '10px',\n        marginRight: '10px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, \"End\"), React.createElement(DateTimePicker, {\n      style: {\n        marginLeft: '10px',\n        marginRight: '10px',\n        enabled: false\n      },\n      amPmAriaLabel: \"Select AM/PM\",\n      calendarAriaLabel: \"Toggle calendar\",\n      clearAriaLabel: \"Clear value\",\n      dayAriaLabel: \"Day\",\n      hourAriaLabel: \"Hour\",\n      maxDetail: \"second\",\n      minuteAriaLabel: \"Minute\",\n      monthAriaLabel: \"Month\",\n      nativeInputAriaLabel: \"Date and time\",\n      secondAriaLabel: \"Second\",\n      value: Date(),\n      yearAriaLabel: \"Year\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      id: \"loader\",\n      style: {\n        marginTop: '10px',\n        display: 'none'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, React.createElement(Loader, {\n      type: \"Oval\",\n      color: \"#0018A8\",\n      height: 80,\n      width: 80,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"averageData\",\n      style: {\n        display: 'none'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, \"Average buy and sell prices for each instrument during the period\"), React.createElement(Line, {\n      data: this.averageData,\n      width: 100,\n      height: 50,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      id: \"endingDealers\",\n      style: {\n        display: 'none'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }, \"Ending positions for each dealer\"), React.createElement(Bar, {\n      data: this.EndingDealers,\n      height: 150,\n      options: {\n        maintainAspectRatio: false\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      id: \"realisedDealers\",\n      style: {\n        display: 'none'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }, \"Realised profit/loss for each dealer\"), React.createElement(Bar, {\n      data: this.RealisedDealers,\n      width: 100,\n      height: 50,\n      options: {\n        maintainAspectRatio: false\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      id: \"effectiveDealers\",\n      style: {\n        display: 'none'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }, \"Effective profit/loss for each dealer\"), React.createElement(Bar, {\n      data: this.effectiveDealers,\n      width: 100,\n      height: 50,\n      options: {\n        maintainAspectRatio: false\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      id: \"endingAggregated\",\n      style: {\n        display: 'none'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }, \"Ending positions aggregated for all dealers\"), React.createElement(Bar, {\n      data: this.endingAggregated,\n      width: 100,\n      height: 50,\n      options: {\n        maintainAspectRatio: false\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      id: \"realisedAggregated\",\n      style: {\n        display: 'none'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }, \"Realised profit/loss for aggregated for all dealers\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }, this.realisedAggregated)), React.createElement(\"div\", {\n      id: \"effectiveAggregated\",\n      style: {\n        display: 'none'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    }, \"Effective profit/loss aggregated for all dealers\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306\n      },\n      __self: this\n    }, this.effectiveAggregated)))));\n  }\n\n  renderFail() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317\n      },\n      __self: this\n    }, \"Connection Fail!\"), React.createElement(NavLink, {\n      to: {\n        pathname: \"/login\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318\n      },\n      __self: this\n    }, \" Retry \"));\n  }\n\n  render() {\n    try {\n      if (this.props.location && this.props.location.state.status) {\n        console.log(this.props.location.state);\n        return this.renderSuccess();\n      } else {\n        console.log(this.props.location);\n        return this.renderFail();\n      }\n    } catch (TypeError) {\n      this.props.history.push('/');\n      return \"Please login again\";\n    }\n  }\n\n}","map":{"version":3,"sources":["C:\\team20project\\frontend\\src\\containers\\DisplayData.js"],"names":["React","Component","NavLink","Bar","Line","Loader","DateTimePicker","GetData","DisplayData","constructor","props","EndingDealers","labels","datasets","label","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","data","RealisedDealers","effectiveDealers","endingAggregated","realisedAggregated","effectiveAggregated","averageData","fill","lineTension","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","handleChartDataSubmit","event","sel","document","getElementById","id","options","selectedIndex","value","console","log","style","display","url","getChartsUrl","fetch","method","headers","body","JSON","stringify","start","getElementsByClassName","children","end","mode","then","res","result","setState","chartsData","error","state","renderSuccess","alignItems","textAlign","width","marginTop","enabled","pointerEvents","marginLeft","marginRight","Date","maintainAspectRatio","renderFail","pathname","render","location","status","TypeError","history","push"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport \"./DisplayData.css\";\r\nimport {Bar} from 'react-chartjs-2';\r\nimport {Line} from 'react-chartjs-2';\r\nimport Loader from 'react-loader-spinner';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport GetData from './GetData';\r\nexport default class DisplayData extends Component {\r\n\r\n    EndingDealers = {\r\n        labels: [\"Lewis Astronomica\", \"Lewis Borealis\", \"Lewis Celestial\", \"Lewis Deuteronic\", \"Lewis Eclipse\",\r\n      \"Lewis Floral\", \"Lewis Galactia\", \"Lewis Heliosphere\", \"Lewis Interstella\", \"Lewis Jupiter\", \"Lewis Koronis\", \"Lewis Lunatic\",\r\n      \r\n      \"Selvyn Astronomica\", \"Selvyn Borealis\", \"Selvyn Celestial\", \"Selvyn Deuteronic\", \"Selvyn Eclipse\",\r\n      \"Selvyn Floral\", \"Selvyn Galactia\", \"Selvyn Heliosphere\", \"Selvyn Interstella\", \"Selvyn Jupiter\", \"Selvyn Koronis\", \"Selvyn Lunatic\",\r\n      \r\n      \"Richard Astronomica\", \"Richard Borealis\", \"Richard Celestial\", \"Richard Deuteronic\", \"Richard Eclipse\",\r\n      \"Richard Floral\", \"Richard Galactia\", \"Richard Heliosphere\", \"Richard Interstella\", \"Richard Jupiter\", \"Richard Koronis\", \"Richard Lunatic\",\r\n      \r\n      \"Lina Astronomica\", \"Lina Borealis\", \"Lina Celestial\", \"Lina Deuteronic\", \"Lina Eclipse\",\r\n      \"Lina Floral\", \"Lina Galactia\", \"Lina Heliosphere\", \"Lina Interstella\", \"Lina Jupiter\", \"Lina Koronis\", \"Lina Lunatic\",\r\n      \r\n      \"John Astronomica\", \"John Borealis\", \"John Celestial\", \"John Deuteronic\", \"John Eclipse\",\r\n      \"John Floral\", \"John Galactia\", \"John Heliosphere\", \"John Interstella\", \"John Jupiter\", \"John Koronis\", \"John Lunatic\",\r\n      \r\n      \"Nidia Astronomica\", \"Nidia Borealis\", \"Nidia Celestial\", \"Nidia Deuteronic\", \"Nidia Eclipse\",\r\n      \"Nidia Floral\", \"Nidia Galactia\", \"Nidia Heliosphere\", \"Nidia Interstella\", \"Nidia Jupiter\", \"Nidia Koronis\", \"Nidia Lunatic\"],\r\n      \r\n      \r\n        datasets: [\r\n          {\r\n            label: 'My First dataset',\r\n            backgroundColor: 'rgba(255,99,132,0.2)',\r\n            borderColor: 'rgba(255,99,132,1)',\r\n            borderWidth: 1,\r\n            hoverBackgroundColor: 'rgba(255,99,132,0.4)',\r\n            hoverBorderColor: 'rgba(255,99,132,1)',\r\n            data: [65, 59, 80, 81, 56, 55, 65, 59, 80, 81, 56, 55,\r\n              65, 59, 80, 81, 56, 55, 65, 59, 80, 81, 56, 55,\r\n              65, 59, 80, 81, 56, 55, 65, 59, 80, 81, 56, 55,\r\n              65, 59, 80, 81, 56, 55, 65, 59, 80, 81, 56, 55,\r\n              65, 59, 80, 81, 56, 55, 65, 59, 80, 81, 56, 55,\r\n              65, 59, 80, 81, 56, 55, 65, 59, 80, 81, 56, 55] // this.state.chartsData.EndingDealers\r\n          }\r\n        ]\r\n      };\r\n      \r\n    RealisedDealers = {\r\n          labels: [\"Lewis\", \"Selvyn\", \"Richard\", \"Lina\", \"John\", \"Nidia\"],\r\n          datasets: [\r\n            {\r\n              label: 'My First dataset',\r\n              backgroundColor: 'rgba(255,99,132,0.2)',\r\n              borderColor: 'rgba(255,99,132,1)',\r\n              borderWidth: 1,\r\n              hoverBackgroundColor: 'rgba(255,99,132,0.4)',\r\n              hoverBorderColor: 'rgba(255,99,132,1)',\r\n              data: [65, 59, 80, 81, 56, 55] // this.state.chartsData.RealisedDealers\r\n            }\r\n          ]\r\n      };\r\n      \r\n    effectiveDealers = {\r\n          labels: [\"Lewis\", \"Selvyn\", \"Richard\", \"Lina\", \"John\", \"Nidia\"],\r\n          datasets: [\r\n            {\r\n              label: 'My First dataset',\r\n              backgroundColor: 'rgba(255,99,132,0.2)',\r\n              borderColor: 'rgba(255,99,132,1)',\r\n              borderWidth: 1,\r\n              hoverBackgroundColor: 'rgba(255,99,132,0.4)',\r\n              hoverBorderColor: 'rgba(255,99,132,1)',\r\n              data: [65, 59, 80, 81, 56, 55]  // this.state.chartsData.effectiveDealers\r\n            }\r\n          ]\r\n      };\r\n      \r\n    endingAggregated = {\r\n      labels: [\"Astronomica\", \"Borealis\", \"Celestial\", \"Deuteronic\", \"Eclipse\",\r\n      \"Floral\", \"Galactia\", \"Heliosphere\", \"Interstella\", \"Jupiter\", \"Koronis\", \"Lunatic\"],\r\n      datasets: [\r\n          {\r\n          label: 'My First dataset',\r\n          backgroundColor: 'rgba(255,99,132,0.2)',\r\n          borderColor: 'rgba(255,99,132,1)',\r\n          borderWidth: 1,\r\n          hoverBackgroundColor: 'rgba(255,99,132,0.4)',\r\n          hoverBorderColor: 'rgba(255,99,132,1)',\r\n          data: [65, 59, 80, 81, 56, 55, 40, 10, 20, 30, 40, 50]  // this.state.chartsData.endingAggregated\r\n          }\r\n      ]\r\n      };\r\n      \r\n    realisedAggregated = 100500; // this.state.chartsData.realisedAggregated\r\n      \r\n    effectiveAggregated = 200400; // this.state.chartsData.effectiveAggregated\r\n      \r\n    averageData = {\r\n          labels: [\"Astronomica\", \"Borealis\", \"Celestial\", \"Deuteronic\", \"Eclipse\",\r\n          \"Floral\", \"Galactia\", \"Heliosphere\", \"Interstella\", \"Jupiter\", \"Koronis\", \"Lunatic\"],\r\n          datasets: [\r\n            {\r\n              label: 'Buy price',\r\n              fill: false,\r\n              lineTension: 0.1,\r\n              backgroundColor: 'rgba(255,192,192,0.4)',\r\n              borderColor: 'rgba(255,192,192,1)',\r\n              borderCapStyle: 'butt',\r\n              borderDash: [],\r\n              borderDashOffset: 0.0,\r\n              borderJoinStyle: 'miter',\r\n              pointBorderColor: 'rgba(255,192,192,1)',\r\n              pointBackgroundColor: '#fff',\r\n              pointBorderWidth: 1,\r\n              pointHoverRadius: 5,\r\n              pointHoverBackgroundColor: 'rgba(255,192,192,1)',\r\n              pointHoverBorderColor: 'rgba(220,220,220,1)',\r\n              pointHoverBorderWidth: 2,\r\n              pointRadius: 1,\r\n              pointHitRadius: 10,\r\n              data: [59, 80, 81, 56, 55, 40, 10, 20, 30, 40, 50, 65] // this.state.chartsData.averageBuy\r\n            },\r\n            {\r\n              label: 'Sell price',\r\n              fill: false,\r\n              lineTension: 0.1,\r\n              backgroundColor: 'rgba(75,192,192,0.4)',\r\n              borderColor: 'rgba(75,192,192,1)',\r\n              borderCapStyle: 'butt',\r\n              borderDash: [],\r\n              borderDashOffset: 0.0,\r\n              borderJoinStyle: 'miter',\r\n              pointBorderColor: 'rgba(75,192,192,1)',\r\n              pointBackgroundColor: '#fff',\r\n              pointBorderWidth: 1,\r\n              pointHoverRadius: 5,\r\n              pointHoverBackgroundColor: 'rgba(75,192,192,1)',\r\n              pointHoverBorderColor: 'rgba(220,220,220,1)',\r\n              pointHoverBorderWidth: 2,\r\n              pointRadius: 1,\r\n              pointHitRadius: 10,\r\n              data: [10, 20, 30, 40, 50, 65, 59, 80, 81, 56, 55, 40] // this.state.chartsData.averageSell\r\n            }\r\n          ]\r\n      };\r\n\r\n    constructor(props) {\r\n        super(props);    \r\n        this.state = {\r\n          chartsData: \"\"\r\n        };\r\n    }\r\n\r\n    getChartsUrl(id){\r\n        switch(id){\r\n            case \"averageData\": return \"http://localhost:5001/average\";\r\n            case \"endingDealers\": return \"http://localhost:5001/dealers_position\";\r\n            case \"realisedDealers\": return \"http://localhost:5001/realised_profit_loss_dealers\";\r\n            case \"effectiveDealers\": return \"http://localhost:5001/effective_profit_loss_dealers\";\r\n            case \"endingAggregated\": return \"http://localhost:5001/aggregated_ending\";\r\n            case \"realisedAggregated\": return \"http://localhost:5001/aggregated_effective\";\r\n            case \"effectiveAggregated\": return \"http://localhost:5001/aggregated_realised\";\r\n        }\r\n    }\r\n\r\n    handleChartDataSubmit = async event => {\r\n        var sel = document.getElementById(\"charts\");\r\n        var id = sel.options[sel.selectedIndex].value;\r\n        console.log(id);\r\n        document.getElementById('loader').style.display = 'block';\r\n        var url = this.getChartsUrl(id);\r\n        console.log(url);\r\n        fetch(url, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n              start: document.getElementsByClassName(\"react-datetime-picker__inputGroup\")[0].children[0].value,\r\n              end: document.getElementsByClassName(\"react-datetime-picker__inputGroup\")[1].children[0].value,\r\n            }),\r\n            mode: \"cors\"\r\n        })\r\n        .then(res => res)\r\n        .then(\r\n        (result) => {\r\n            console.log(result);\r\n            //todo change the vars\r\n            this.setState ({\r\n                chartsData: result\r\n            }) \r\n            document.getElementById('loader').style.display = 'none';        \r\n        },\r\n        (error) => {\r\n            console.log(\"ERROR in charts \" + error);\r\n            document.getElementById('loader').style.display = 'none'; \r\n        }\r\n        );\r\n    }\r\n\r\n    renderSuccess() {\r\n        return (\r\n            <div>\r\n            <GetData/>\r\n            <div style={{alignItems:'center', textAlign:'center'}}>\r\n            <select id=\"charts\" onChange={this.handleChartDataSubmit} style={{width:'100%', marginTop:'10px'}}>\r\n                <option disabled selected value> -- select an option -- </option>\r\n                <option value=\"averageData\">Average buy and sell prices for each instrument during the period</option>\r\n                <option value=\"endingDealers\">Ending positions for each dealer</option>\r\n                <option value=\"realisedDealers\">Realised profit/loss for each dealer</option>\r\n                <option value=\"effectiveDealers\">Effective profit/loss for each dealer</option>\r\n                <option value=\"endingAggregated\">Ending positions aggregated for all dealers</option>\r\n                <option value=\"realisedAggregated\">Realised profit/loss for aggregated for all dealers</option>\r\n                <option value=\"effectiveAggregated\">Effective profit/loss aggregated for all dealers</option>\r\n            </select>\r\n            <div style={{display: 'inline-flex', marginTop: '10px', enabled: false, pointerEvents:'none'}}>\r\n                <p style={{marginLeft:'10px', marginRight:'10px'}}>Start</p>\r\n                <DateTimePicker style={{marginLeft:'10px', marginRight:'10px', enabled: false}}\r\n                    amPmAriaLabel=\"Select AM/PM\"\r\n                    calendarAriaLabel=\"Toggle calendar\"\r\n                    clearAriaLabel=\"Clear value\"\r\n                    dayAriaLabel=\"Day\"\r\n                    hourAriaLabel=\"Hour\"\r\n                    maxDetail=\"second\"\r\n                    minuteAriaLabel=\"Minute\"\r\n                    monthAriaLabel=\"Month\"\r\n                    nativeInputAriaLabel=\"Date and time\"\r\n                    secondAriaLabel=\"Second\"\r\n                    value={new Date() - 1000 * 120} // pass 2 min ago for 1 day data\r\n                    yearAriaLabel=\"Year\"/>\r\n                <p style={{marginLeft:'10px', marginRight:'10px'}}>End</p>\r\n                <DateTimePicker style={{marginLeft:'10px', marginRight:'10px', enabled: false}}\r\n                    amPmAriaLabel=\"Select AM/PM\"\r\n                    calendarAriaLabel=\"Toggle calendar\"\r\n                    clearAriaLabel=\"Clear value\"\r\n                    dayAriaLabel=\"Day\"\r\n                    hourAriaLabel=\"Hour\"\r\n                    maxDetail=\"second\"\r\n                    minuteAriaLabel=\"Minute\"\r\n                    monthAriaLabel=\"Month\"\r\n                    nativeInputAriaLabel=\"Date and time\"\r\n                    secondAriaLabel=\"Second\"\r\n                    value={Date()}\r\n                    yearAriaLabel=\"Year\"/>\r\n            </div>\r\n            <div id=\"loader\" style={{marginTop:'10px', display:'none'}} >\r\n                <Loader type=\"Oval\" color=\"#0018A8\" height={80} width={80}/>\r\n            </div>\r\n            <div>\r\n                <div id=\"averageData\" style={{display:'none'}}>\r\n                    <h4>Average buy and sell prices for each instrument during the period</h4>\r\n                    <Line data={this.averageData} width={100}\r\n                    height={50}/>           \r\n                </div>\r\n                <div id=\"endingDealers\" style={{display:'none'}}>\r\n                    <h4>Ending positions for each dealer</h4>\r\n                    <Bar\r\n                    data={this.EndingDealers}\r\n                    height={150}\r\n                    options={{\r\n                        maintainAspectRatio: false\r\n                    }}\r\n                    />\r\n                </div>\r\n                <div id=\"realisedDealers\" style={{display:'none'}}>\r\n                    <h4>Realised profit/loss for each dealer</h4>\r\n                    <Bar\r\n                    data={this.RealisedDealers}\r\n                    width={100}\r\n                    height={50}\r\n                    options={{\r\n                        maintainAspectRatio: false\r\n                    }}\r\n                    />\r\n                </div>\r\n                <div id=\"effectiveDealers\" style={{display:'none'}}>\r\n                    <h4>Effective profit/loss for each dealer</h4> \r\n                    <Bar\r\n                    data={this.effectiveDealers}\r\n                    width={100}\r\n                    height={50}\r\n                    options={{\r\n                        maintainAspectRatio: false\r\n                    }}\r\n                    />\r\n                </div>\r\n                <div id=\"endingAggregated\" style={{display:'none'}}>\r\n                    <h4>Ending positions aggregated for all dealers</h4>\r\n                    <Bar\r\n                    data={this.endingAggregated}\r\n                    width={100}\r\n                    height={50}\r\n                    options={{\r\n                        maintainAspectRatio: false\r\n                    }}\r\n                    />\r\n                </div>\r\n                <div id=\"realisedAggregated\" style={{display:'none'}}>\r\n                    <h4>Realised profit/loss for aggregated for all dealers</h4>\r\n                    <p>{this.realisedAggregated}</p>\r\n                </div>\r\n                <div id=\"effectiveAggregated\" style={{display:'none'}}>\r\n                    <h4>Effective profit/loss aggregated for all dealers</h4>\r\n                    <p>{this.effectiveAggregated}</p>\r\n                </div>\r\n            </div>\r\n          </div>\r\n          </div>       \r\n        )\r\n    }\r\n\r\n    renderFail() {\r\n        return (\r\n            <div>\r\n                <p>Connection Fail!</p>\r\n                <NavLink to={{pathname: \"/login\"}} > Retry </NavLink>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        try {\r\n            if (this.props.location && this.props.location.state.status) {\r\n                console.log(this.props.location.state);\r\n                return this.renderSuccess()\r\n            }\r\n            else {\r\n                console.log(this.props.location);\r\n                return this.renderFail()\r\n            }\r\n        }\r\n        catch (TypeError) {\r\n            this.props.history.push('/');\r\n            return (\"Please login again\");\r\n        }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}