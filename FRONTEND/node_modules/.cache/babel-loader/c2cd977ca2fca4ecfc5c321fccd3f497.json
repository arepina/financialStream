{"ast":null,"code":"var _jsxFileName = \"C:\\\\team20project\\\\frontend\\\\src\\\\containers\\\\Login.js\";\nimport React, { Component } from \"react\";\nimport { Button, FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\nimport \"./Login.css\";\nexport default class Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.id]: event.target.value\n      });\n    };\n\n    this.handleLoginSubmit = async event => {\n      event.preventDefault();\n      fetch('https://jsonplaceholder.typicode.com/posts', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          login: this.state.email,\n          password: this.state.password\n        }),\n        //credentials: 'same-origin'\n        mode: \"cors\"\n      }).then(res => res).then(result => {\n        if (parseInt(result.status / 100) === 2) {\n          this.setState({\n            loggedInStatus: true\n          });\n        } else {\n          alert(\"Login failed. Please try again.\");\n          this.setState({\n            loggedInStatus: false\n          });\n        }\n      }, error => {\n        alert(\"Login failed. Please try again.\");\n        this.setState({\n          loggedInStatus: false\n        });\n      });\n    };\n\n    this.handleDisplayDataSubmit = async event => {\n      event.preventDefault();\n      fetch('https://jsonplaceholder.typicode.com/posts', {\n        method: 'GET',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        //credentials: 'same-origin'\n        mode: \"cors\"\n      }).then(res => res).then(result => {\n        if (parseInt(result.status / 100) === 2) {\n          this.props.history.push('/displaydata', {\n            status: true,\n            username: this.state.username\n          });\n        } else {\n          this.props.history.push('/displaydata', {\n            status: false\n          });\n        }\n      }, error => {\n        this.props.history.push('/displaydata', {\n          status: false\n        });\n      });\n    };\n\n    this.state = {\n      username: \"\",\n      password: \"\",\n      loggedInStatus: false\n    };\n  }\n\n  validateForm() {\n    return this.state.username.length > 0 && this.state.password.length > 0;\n  }\n\n  renderLogin() {\n    return React.createElement(\"div\", {\n      className: \"Login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleLoginSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      controlId: \"username\",\n      bsSize: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(ControlLabel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Username\"), React.createElement(FormControl, {\n      autoFocus: true,\n      value: this.state.Username,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      controlId: \"password\",\n      bsSize: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(ControlLabel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"Password\"), React.createElement(FormControl, {\n      value: this.state.password,\n      onChange: this.handleChange,\n      type: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    })), React.createElement(Button, {\n      style: {\n        background: '#0018A8',\n        color: 'white'\n      },\n      block: true,\n      bsSize: \"large\",\n      disabled: !this.validateForm(),\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"Login\")));\n  }\n\n  render() {\n    const divStyle = {\n      justifycontent: 'center',\n      display: 'grid'\n    };\n\n    if (this.state.loggedInStatus) {\n      return React.createElement(\"div\", {\n        style: divStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        style: {\n          textAlign: 'center',\n          fontWeight: 'bold'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, \" Welcome, \", this.state.username, \"!\"), React.createElement(\"div\", {\n        style: {\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(Button, {\n        style: {\n          background: '#0018A8',\n          color: 'white',\n          width: '100px',\n          fontWeight: 'bold',\n          padding: '10px'\n        },\n        onClick: this.handleDisplayDataSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, \" Continue\")));\n    } else {\n      return this.renderLogin();\n    }\n  }\n\n}","map":{"version":3,"sources":["C:\\team20project\\frontend\\src\\containers\\Login.js"],"names":["React","Component","Button","FormGroup","FormControl","ControlLabel","Login","constructor","props","handleChange","event","setState","target","id","value","handleLoginSubmit","preventDefault","fetch","method","headers","body","JSON","stringify","login","state","email","password","mode","then","res","result","parseInt","status","loggedInStatus","alert","error","handleDisplayDataSubmit","history","push","username","validateForm","length","renderLogin","Username","background","color","render","divStyle","justifycontent","display","textAlign","fontWeight","width","padding"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Button, FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\r\nimport \"./Login.css\";\r\n\r\nexport default class Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      loggedInStatus: false\r\n    };\r\n  }\r\n\r\n  validateForm() {\r\n    return this.state.username.length > 0 && this.state.password.length > 0;\r\n  }\r\n\r\n  handleChange = event => {\r\n    this.setState({\r\n      [event.target.id]: event.target.value\r\n    });\r\n  }\r\n\r\n  handleLoginSubmit = async event => {\r\n    event.preventDefault();\r\n\r\n    fetch('https://jsonplaceholder.typicode.com/posts', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        login: this.state.email,\r\n        password: this.state.password,\r\n      }),\r\n      //credentials: 'same-origin'\r\n      mode: \"cors\"\r\n    })\r\n      .then(res => res)\r\n      .then(\r\n        (result) => {\r\n          if (parseInt(result.status / 100) === 2) {\r\n            this.setState({\r\n              loggedInStatus: true\r\n            })\r\n          }\r\n          else {\r\n            alert(\"Login failed. Please try again.\")\r\n            this.setState({\r\n              loggedInStatus: false\r\n            })\r\n          }\r\n        },\r\n        (error) => {\r\n          alert(\"Login failed. Please try again.\")\r\n          this.setState({\r\n            loggedInStatus: false\r\n          })\r\n        }\r\n      )\r\n  }\r\n\r\n  handleDisplayDataSubmit = async event => {\r\n    event.preventDefault();\r\n\r\n    fetch('https://jsonplaceholder.typicode.com/posts', {\r\n      method: 'GET',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n      },\r\n      //credentials: 'same-origin'\r\n      mode: \"cors\"\r\n    })\r\n      .then(res => res)\r\n      .then(\r\n        (result) => {\r\n          if (parseInt(result.status / 100) === 2) {\r\n            this.props.history.push('/displaydata', { status: true, username: this.state.username});\r\n          }\r\n          else {\r\n            this.props.history.push('/displaydata', { status: false});\r\n          }\r\n        },\r\n        (error) => {\r\n          this.props.history.push('/displaydata', {status: false});\r\n        }\r\n      )\r\n  }\r\n\r\n  renderLogin() {\r\n    return (\r\n      <div className=\"Login\">\r\n        <form onSubmit={this.handleLoginSubmit}>\r\n          <FormGroup controlId=\"username\" bsSize=\"large\">\r\n            <ControlLabel>Username</ControlLabel>\r\n            <FormControl\r\n              autoFocus\r\n              value={this.state.Username}\r\n              onChange={this.handleChange}\r\n            />\r\n          </FormGroup>\r\n          <FormGroup controlId=\"password\" bsSize=\"large\">\r\n            <ControlLabel>Password</ControlLabel>\r\n            <FormControl\r\n              value={this.state.password}\r\n              onChange={this.handleChange}\r\n              type=\"password\"\r\n            />\r\n          </FormGroup>\r\n          <Button style={{background:'#0018A8', color: 'white'}}\r\n            block\r\n            bsSize=\"large\"\r\n            disabled={!this.validateForm()}\r\n            type=\"submit\"\r\n          >\r\n            Login\r\n          </Button>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    const divStyle = {\r\n      justifycontent: 'center', \r\n      display: 'grid'\r\n    };\r\n    if (this.state.loggedInStatus) {\r\n      return (\r\n        <div style={divStyle}>\r\n          <h3 style={{textAlign:'center', fontWeight: 'bold'}}> Welcome, {this.state.username}!</h3>\r\n          <div style={{textAlign:'center'}}>\r\n            <Button  style={{\r\n              background:'#0018A8', color: 'white', width: '100px', \r\n              fontWeight: 'bold', padding: '10px'\r\n              }} onClick={this.handleDisplayDataSubmit}> Continue \r\n            </Button>\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n    else {\r\n      return (this.renderLogin())\r\n    }\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}