{"ast":null,"code":"var _jsxFileName = \"C:\\\\team20project\\\\frontend\\\\src\\\\containers\\\\Signup.js\";\nimport React, { Component } from \"react\";\nimport { HelpBlock, FormGroup, FormControl, ControlLabel, Dropdown, DropdownButton, ButtonGroup, Button } from \"react-bootstrap\";\nimport LoaderButton from \"../components/LoaderButton\";\nimport \"./Signup.css\";\nexport default class Signup extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.id]: event.target.value\n      });\n    };\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      let url = 'http://localhost:5000/register';\n      let data = new FormData();\n      data.append(\"login\", this.state.email);\n      data.append(\"password\", this.state.password);\n      data.append(\"userType\", this.state.rSelected);\n      fetch(url, {\n        method: \"POST\",\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: data,\n        credentials: 'same-origin'\n      }) //.then(checkStatus)\n      .then(res => res.json()).then(function (res) {\n        console.log(res);\n      }).catch(function (error) {\n        alert(error);\n      });\n      this.setState({\n        isLoading: true\n      });\n      this.setState({\n        newUser: \"test\"\n      });\n      this.setState({\n        isLoading: false\n      });\n    };\n\n    this.handleConfirmationSubmit = async event => {\n      event.preventDefault();\n      this.setState({\n        isLoading: true\n      });\n    };\n\n    this.state = {\n      isLoading: false,\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      confirmationCode: \"\",\n      newUser: null\n    };\n    this.onRadioBtnClick = this.onRadioBtnClick.bind(this); //this.onCheckboxBtnClick = this.onCheckboxBtnClick.bind(this);\n  }\n\n  validateForm() {\n    return this.state.email.length > 0 && this.state.password.length > 0 && this.state.password === this.state.confirmPassword;\n  }\n\n  onRadioBtnClick(rSelected) {\n    this.setState({\n      rSelected\n    });\n  }\n\n  validateConfirmationForm() {\n    return this.state.confirmationCode.length > 0;\n  }\n\n  renderConfirmationForm() {\n    return React.createElement(\"form\", {\n      onSubmit: this.handleConfirmationSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      controlId: \"confirmationCode\",\n      bsSize: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(ControlLabel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Confirmation Code\"), React.createElement(FormControl, {\n      autoFocus: true,\n      type: \"tel\",\n      value: this.state.confirmationCode,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }), React.createElement(HelpBlock, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Please check your email for the code.\")), React.createElement(LoaderButton, {\n      block: true,\n      bsSize: \"large\",\n      disabled: !this.validateConfirmationForm(),\n      type: \"submit\",\n      isLoading: this.state.isLoading,\n      text: \"Verify\",\n      loadingText: \"Verifying\\u2026\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }));\n  }\n\n  renderForm() {\n    return React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      controlId: \"email\",\n      bsSize: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(ControlLabel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"Email\"), React.createElement(FormControl, {\n      autoFocus: true,\n      type: \"email\",\n      value: this.state.email,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      controlId: \"password\",\n      bsSize: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(ControlLabel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"Password\"), React.createElement(FormControl, {\n      value: this.state.password,\n      onChange: this.handleChange,\n      type: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      controlId: \"usertype\",\n      bsSize: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(ControlLabel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, \"User Type: \"), React.createElement(ButtonGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"primary\",\n      onClick: () => this.onRadioBtnClick(\"Security Officer\"),\n      active: this.state.rSelected === \"Security Officer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, \"Security Officer\"), React.createElement(Button, {\n      color: \"primary\",\n      onClick: () => this.onRadioBtnClick(\"Trader\"),\n      active: this.state.rSelected === \"Trader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, \"Trader\"), React.createElement(Button, {\n      color: \"primary\",\n      onClick: () => this.onRadioBtnClick(\"System Architect\"),\n      active: this.state.rSelected === \"System Architect\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, \"System Architect\"), React.createElement(Button, {\n      color: \"primary\",\n      onClick: () => this.onRadioBtnClick(\"Senior trader\"),\n      active: this.state.rSelected === \"Senior trader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, \"Senior trader \"))), React.createElement(FormGroup, {\n      controlId: \"confirmPassword\",\n      bsSize: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(ControlLabel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, \"Confirm Password\"), React.createElement(FormControl, {\n      value: this.state.confirmPassword,\n      onChange: this.handleChange,\n      type: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    })), React.createElement(LoaderButton, {\n      block: true,\n      bsSize: \"large\",\n      disabled: !this.validateForm(),\n      type: \"submit\",\n      isLoading: this.state.isLoading,\n      text: \"Signup\",\n      loadingText: \"Signing up\\u2026\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"Signup\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, this.state.newUser === null ? this.renderForm() : this.renderConfirmationForm());\n  }\n\n}","map":{"version":3,"sources":["C:\\team20project\\frontend\\src\\containers\\Signup.js"],"names":["React","Component","HelpBlock","FormGroup","FormControl","ControlLabel","Dropdown","DropdownButton","ButtonGroup","Button","LoaderButton","Signup","constructor","props","handleChange","event","setState","target","id","value","handleSubmit","preventDefault","url","data","FormData","append","state","email","password","rSelected","fetch","method","headers","body","credentials","then","res","json","console","log","catch","error","alert","isLoading","newUser","handleConfirmationSubmit","confirmPassword","confirmationCode","onRadioBtnClick","bind","validateForm","length","validateConfirmationForm","renderConfirmationForm","renderForm","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  HelpBlock,\r\n  FormGroup,\r\n  FormControl,\r\n  ControlLabel,\r\n  Dropdown,\r\n  DropdownButton,\r\n  ButtonGroup,\r\n  Button\r\n} from \"react-bootstrap\";\r\nimport LoaderButton from \"../components/LoaderButton\";\r\nimport \"./Signup.css\";\r\n\r\nexport default class Signup extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isLoading: false,\r\n      email: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n      confirmationCode: \"\",\r\n      newUser: null\r\n    };\r\n\r\n    this.onRadioBtnClick = this.onRadioBtnClick.bind(this);\r\n    //this.onCheckboxBtnClick = this.onCheckboxBtnClick.bind(this);\r\n  }\r\n\r\n  validateForm() {\r\n    return (\r\n      this.state.email.length > 0 &&\r\n      this.state.password.length > 0 &&\r\n      this.state.password === this.state.confirmPassword\r\n    );\r\n  }\r\n\r\n  onRadioBtnClick(rSelected) {\r\n    this.setState({ rSelected });\r\n  }\r\n\r\n\r\n  validateConfirmationForm() {\r\n    return this.state.confirmationCode.length > 0;\r\n  }\r\n\r\n  handleChange = event => {\r\n    this.setState({\r\n      [event.target.id]: event.target.value\r\n    });\r\n  }\r\n\r\n  handleSubmit = async event => {\r\n    event.preventDefault();\r\n\r\n    let url = 'http://localhost:5000/register';\r\n\r\n    let data =  new FormData();\r\n    data.append(\"login\", this.state.email);\r\n    data.append(\"password\", this.state.password);\r\n    data.append(\"userType\", this.state.rSelected);\r\n    fetch(url, {\r\n        method: \"POST\", \r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: data, \r\n        credentials: 'same-origin'\r\n      }) \r\n       //.then(checkStatus)\r\n       .then(res => res.json())\r\n        .then(function(res) {\r\n            console.log(res)\r\n        })\r\n       .catch(function(error) {\r\n           alert(error)\r\n       });\r\n\r\n\r\n\r\n\r\n    this.setState({ isLoading: true });\r\n\r\n    this.setState({ newUser: \"test\" });\r\n\r\n    this.setState({ isLoading: false });\r\n  }\r\n\r\n  handleConfirmationSubmit = async event => {\r\n    event.preventDefault();\r\n\r\n    this.setState({ isLoading: true });\r\n  }\r\n\r\n  renderConfirmationForm() {\r\n    return (\r\n      <form onSubmit={this.handleConfirmationSubmit}>\r\n        <FormGroup controlId=\"confirmationCode\" bsSize=\"large\">\r\n          <ControlLabel>Confirmation Code</ControlLabel>\r\n          <FormControl\r\n            autoFocus\r\n            type=\"tel\"\r\n            value={this.state.confirmationCode}\r\n            onChange={this.handleChange}\r\n          />\r\n          <HelpBlock>Please check your email for the code.</HelpBlock>\r\n        </FormGroup>\r\n        <LoaderButton\r\n          block\r\n          bsSize=\"large\"\r\n          disabled={!this.validateConfirmationForm()}\r\n          type=\"submit\"\r\n          isLoading={this.state.isLoading}\r\n          text=\"Verify\"\r\n          loadingText=\"Verifying…\"\r\n        />\r\n      </form>\r\n    );\r\n  }\r\n\r\n  renderForm() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <FormGroup controlId=\"email\" bsSize=\"large\">\r\n          <ControlLabel>Email</ControlLabel>\r\n          <FormControl\r\n            autoFocus\r\n            type=\"email\"\r\n            value={this.state.email}\r\n            onChange={this.handleChange}\r\n          />\r\n        </FormGroup>\r\n        <FormGroup controlId=\"password\" bsSize=\"large\">\r\n          <ControlLabel>Password</ControlLabel>\r\n          <FormControl\r\n            value={this.state.password}\r\n            onChange={this.handleChange}\r\n            type=\"password\"\r\n          />\r\n        </FormGroup>\r\n\r\n\r\n\r\n        <FormGroup controlId=\"usertype\" bsSize=\"large\">\r\n        <ControlLabel>User Type: </ControlLabel>\r\n        <ButtonGroup> \r\n          <Button color=\"primary\" onClick={() => this.onRadioBtnClick(\"Security Officer\")} active={this.state.rSelected === \"Security Officer\"}>Security Officer</Button>\r\n          <Button color=\"primary\" onClick={() => this.onRadioBtnClick(\"Trader\")} active={this.state.rSelected === \"Trader\"}>Trader</Button>\r\n          <Button color=\"primary\" onClick={() => this.onRadioBtnClick(\"System Architect\")} active={this.state.rSelected === \"System Architect\"}>System Architect</Button>\r\n          <Button color=\"primary\" onClick={() => this.onRadioBtnClick(\"Senior trader\")} active={this.state.rSelected === \"Senior trader\"}>Senior trader </Button>\r\n\r\n        </ButtonGroup>\r\n        </FormGroup>\r\n\r\n\r\n\r\n        <FormGroup controlId=\"confirmPassword\" bsSize=\"large\">\r\n          <ControlLabel>Confirm Password</ControlLabel>\r\n          <FormControl\r\n            value={this.state.confirmPassword}\r\n            onChange={this.handleChange}\r\n            type=\"password\"\r\n          />\r\n        </FormGroup>\r\n        <LoaderButton\r\n          block\r\n          bsSize=\"large\"\r\n          disabled={!this.validateForm()}\r\n          type=\"submit\"\r\n          isLoading={this.state.isLoading}\r\n          text=\"Signup\"\r\n          loadingText=\"Signing up…\"\r\n        />\r\n      </form>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Signup\">\r\n        {this.state.newUser === null\r\n          ? this.renderForm()\r\n          : this.renderConfirmationForm()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}