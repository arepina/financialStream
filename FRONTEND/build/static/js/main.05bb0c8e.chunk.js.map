{"version":3,"sources":["containers/NotFound.js","containers/Utils.js","containers/Login.js","containers/TableData.js","containers/DisplayData.js","Routes.js","App.js","serviceWorker.js","index.js"],"names":["className","baseUrl","Login","props","handleChange","event","setState","target","id","value","handleLoginSubmit","a","preventDefault","fetch","method","headers","body","JSON","stringify","login","state","username","password","mode","then","res","result","parseInt","status","loggedInStatus","alert","error","handleDisplayDataSubmit","history","push","this","length","onSubmit","FormGroup","controlId","bsSize","ControlLabel","FormControl","autoFocus","Username","onChange","type","Button","style","background","color","block","disabled","validateForm","justifycontent","display","textAlign","fontWeight","width","padding","onClick","renderLogin","Component","source","EventSource","stringObservable","Observable","create","observer","addEventListener","messageEvent","next","data","TableData","useState","stringArray","setStringArray","useObservable","pipe","withLatestFrom","map","updatedStringArray","unshift","pop","Input","onKeyPress","filter","tr","td","i","document","getElementById","toUpperCase","getElementsByTagName","textContent","innerText","placeholder","Table","responsive","message","index","replace","parse","key","instrumentName","cpty","price","quantity","time","console","log","close","window","location","reload","DisplayData","handleChartDataSubmit","hideAll","sel","options","selectedIndex","url","getChartsUrl","start","getElementsByClassName","children","end","response","json","averageData","labels","datasets","label","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","averageBuy","averageSell","endingDealers","borderWidth","hoverBackgroundColor","hoverBorderColor","realisedDealers","effectiveDealers","endingAggregated","effectiveAggregatedData","effectiveAggregated","realisedAggregatedData","realisedAggregated","averageSellData","averageBuyData","endingAggregatedData","effectiveDealersData","realisedDealersData","endingDealersData","alignItems","marginTop","selected","enabled","pointerEvents","marginLeft","marginRight","amPmAriaLabel","calendarAriaLabel","clearAriaLabel","dayAriaLabel","hourAriaLabel","maxDetail","minuteAriaLabel","monthAriaLabel","nativeInputAriaLabel","secondAriaLabel","Date","yearAriaLabel","height","NavLink","to","pathname","renderSuccess","renderFail","TypeError","Switch","Route","path","exact","component","NotFound","App","Navbar","fluid","collapseOnSelect","Header","Brand","Routes","Boolean","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.05bb0c8e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./NotFound.css\";\r\n\r\nexport default () =>\r\n  <div className=\"NotFound\">\r\n    <h3>Sorry, page not found!</h3>\r\n  </div>;\r\n","const baseUrl = \"http://webback-mysql-server.apps.dbgrads-6eec.openshiftworkshop.com\"\r\n\r\nexport default baseUrl","import React, { Component } from \"react\";\r\nimport { Button, FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\r\nimport \"./Login.css\";\r\nimport baseUrl from \"./Utils\";\r\n\r\nexport default class Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      loggedInStatus: false\r\n    };\r\n  }\r\n\r\n  validateForm() {\r\n    return this.state.username.length > 0 && this.state.password.length > 0;\r\n  }\r\n\r\n  handleChange = event => {\r\n    this.setState({\r\n      [event.target.id]: event.target.value\r\n    });\r\n  }\r\n\r\n  handleLoginSubmit = async event => {\r\n    event.preventDefault();\r\n    const url = baseUrl + '/login'\r\n    fetch(url, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        login: this.state.username,\r\n        password: this.state.password,\r\n      }),\r\n      //credentials: 'same-origin'\r\n      mode: \"cors\"\r\n    })\r\n      .then(res => res)\r\n      .then(\r\n        (result) => {\r\n          if (parseInt(result.status / 100) === 2) {\r\n            this.setState({\r\n              loggedInStatus: true\r\n            })\r\n          }\r\n          else {\r\n            alert(\"Login failed. Please try again.\")\r\n            this.setState({\r\n              loggedInStatus: false\r\n            })\r\n          }\r\n        },\r\n        (error) => {\r\n          alert(\"Login failed. Please try again.\")\r\n          this.setState({\r\n            loggedInStatus: false\r\n          })\r\n        }\r\n      )\r\n  }\r\n\r\n  handleDisplayDataSubmit = async event => {\r\n    event.preventDefault();\r\n    const url = baseUrl + '/connection'\r\n    fetch(url, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n      },\r\n      //credentials: 'same-origin'\r\n      mode: \"cors\"\r\n    })\r\n      .then(res => res)\r\n      .then(\r\n        (result) => {\r\n          if (parseInt(result.status / 100) === 2) {\r\n            this.props.history.push('/displaydata', { status: true, username: this.state.username});\r\n          }\r\n          else {\r\n            this.props.history.push('/displaydata', { status: false});\r\n          }\r\n        },\r\n        (error) => {\r\n          this.props.history.push('/displaydata', {status: false});\r\n        }\r\n      )\r\n  }\r\n\r\n  renderLogin() {\r\n    return (\r\n      <div className=\"Login\">\r\n        <form onSubmit={this.handleLoginSubmit}>\r\n          <FormGroup controlId=\"username\" bsSize=\"large\">\r\n            <ControlLabel>Username</ControlLabel>\r\n            <FormControl\r\n              autoFocus\r\n              value={this.state.Username}\r\n              onChange={this.handleChange}\r\n            />\r\n          </FormGroup>\r\n          <FormGroup controlId=\"password\" bsSize=\"large\">\r\n            <ControlLabel>Password</ControlLabel>\r\n            <FormControl\r\n              value={this.state.password}\r\n              onChange={this.handleChange}\r\n              type=\"password\"\r\n            />\r\n          </FormGroup>\r\n          <Button style={{background:'#0018A8', color: 'white'}}\r\n            block\r\n            bsSize=\"large\"\r\n            disabled={!this.validateForm()}\r\n            type=\"submit\"\r\n          >\r\n            Login\r\n          </Button>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    const divStyle = {\r\n      justifycontent: 'center',\r\n      display: 'grid'\r\n    };\r\n    if (this.state.loggedInStatus) {\r\n      return (\r\n        <div style={divStyle}>\r\n          <h3 style={{textAlign:'center', fontWeight: 'bold'}}> Welcome, {this.state.username}!</h3>\r\n          <div style={{textAlign:'center'}}>\r\n            <Button  style={{\r\n              background:'#0018A8', color: 'white', width: '100px',\r\n              fontWeight: 'bold', padding: '10px'\r\n              }} onClick={this.handleDisplayDataSubmit}> Continue\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n    else {\r\n      return (this.renderLogin())\r\n    }\r\n  }\r\n}\r\n","import React, { useState } from 'react';\r\nimport { useObservable } from 'rxjs-hooks';\r\nimport { Observable } from 'rxjs';\r\nimport { map, withLatestFrom, filter } from 'rxjs/operators';\r\nimport { Table, Input, Button } from 'reactstrap';\r\nimport \"./TableData.css\";\r\nimport baseUrl from \"./Utils\";\r\n\r\n    const url = baseUrl + '/get_stream_data';\r\n    const source = new EventSource(url);\r\n    const stringObservable = Observable.create(observer => {\r\n        source.addEventListener('message', (messageEvent) => {\r\n            // console.log(messageEvent);\r\n            observer.next(messageEvent.data);\r\n        }, false);\r\n    });\r\n\r\nfunction TableData() {\r\n    const myTable = \"myTable\";\r\n\r\n    const [stringArray, setStringArray] = useState([]);\r\n    const refresh = event => {\r\n        window.location.reload();\r\n    }\r\n\r\n    useObservable(\r\n        state =>\r\n            stringObservable.pipe(\r\n                withLatestFrom(state),\r\n                map(([state]) => {\r\n                    let updatedStringArray = stringArray;\r\n                    updatedStringArray.unshift(state);\r\n                    if (updatedStringArray.length >= 50) {\r\n                        updatedStringArray.pop();\r\n                    }\r\n                    setStringArray(updatedStringArray);\r\n                    return state;\r\n                })\r\n            )\r\n    );\r\n\r\n    const stopStreaming = event => {\r\n        console.log('Connection closed');\r\n        source.close();\r\n    }\r\n\r\n    const filterFn = event => {\r\n        // Declare variables\r\n        var input, filter, table, tr, td, i, txtValue;\r\n        input = document.getElementById(\"myFilter\");\r\n        filter = input.value.toUpperCase();\r\n        table = document.getElementById(\"myTable\");\r\n        tr = table.getElementsByTagName(\"tr\");\r\n\r\n        if (filter) {\r\n            // Loop through all table rows, and hide those who don't match the search query\r\n            for (i = 1; i < tr.length; i++) {\r\n                td = tr[i].getElementsByTagName(\"td\")[1];\r\n                if (td) {\r\n                    txtValue = td.textContent || td.innerText;\r\n                    // if (txtValue.toUpperCase().indexOf(filter) > -1) {\r\n                    if (txtValue.toUpperCase() === filter) {\r\n                        tr[i].style.display = \"\";\r\n                    } else {\r\n                        tr[i].style.display = \"none\";\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            for (i = 1; i < tr.length; i++) {\r\n                    tr[i].style.display = \"\";\r\n                }\r\n            }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Input type=\"text\" id=\"myFilter\" onKeyPress={filterFn} placeholder=\"Filter for Instrument here...\"></Input>\r\n            <div id=\"table-wrapper\">\r\n            <div id=\"table-scroll\">\r\n            <Table responsive id={myTable}>\r\n                <thead>\r\n                    <tr>\r\n                        <th>#</th>\r\n                        <th>instrumentName</th>\r\n                        <th>cpty</th>\r\n                        <th>price</th>\r\n                        <th>type</th>\r\n                        <th>quantity</th>\r\n                        <th>time</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        stringArray.map((message, index) => {\r\n                            message = message.replace(/'/g, '\"')\r\n                            message = JSON.parse(message)\r\n                            return (\r\n                                <tr key={index}>\r\n                                <td>{index}</td>\r\n                                <td>{message.instrumentName}</td>\r\n                                <td>{message.cpty}</td>\r\n                                <td>{message.price}</td>\r\n                                <td>{message.type}</td>\r\n                                <td>{message.quantity}</td>\r\n                                <td>{message.time}</td>\r\n                                </tr>\r\n                            )\r\n                        })\r\n                    }\r\n                </tbody>\r\n            </Table>\r\n            </div>\r\n            </div>\r\n            <Button onClick={stopStreaming}>Stop</Button>\r\n            <Button onClick={refresh}>Refresh</Button>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default TableData;\r\n","import React, { Component } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport \"./DisplayData.css\";\r\nimport {Bar} from 'react-chartjs-2';\r\nimport {Line} from 'react-chartjs-2';\r\nimport Loader from 'react-loader-spinner';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport TableData from './TableData';\r\nimport baseUrl from \"./Utils\";\r\nexport default class DisplayData extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          averageSellData: [0,0,0,0,0,0,0,0,0,0,0,0],\r\n          averageBuyData: [0,0,0,0,0,0,0,0,0,0,0,0],\r\n          effectiveAggregatedData: 0,\r\n          realisedAggregatedData: 0,\r\n          endingAggregatedData: [0,0,0,0,0,0,0,0,0,0,0,0],\r\n          effectiveDealersData: [0,0,0,0,0,0],\r\n          realisedDealersData:  [0,0,0,0,0,0],\r\n          endingDealersData: [0,0,0,0,0,0,0,0,0,0,0,0,\r\n                          0,0,0,0,0,0,0,0,0,0,0,0,\r\n                          0,0,0,0,0,0,0,0,0,0,0,0,\r\n                          0,0,0,0,0,0,0,0,0,0,0,0,\r\n                          0,0,0,0,0,0,0,0,0,0,0,0,\r\n                          0,0,0,0,0,0,0,0,0,0,0,0],\r\n        };\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n      this.setState({\r\n        endingDealers : {\r\n             labels: [\"Lewis Astronomica\", \"Lewis Borealis\", \"Lewis Celestial\", \"Lewis Deuteronic\", \"Lewis Eclipse\",\r\n           \"Lewis Floral\", \"Lewis Galactia\", \"Lewis Heliosphere\", \"Lewis Interstella\", \"Lewis Jupiter\", \"Lewis Koronis\", \"Lewis Lunatic\",\r\n\r\n           \"Selvyn Astronomica\", \"Selvyn Borealis\", \"Selvyn Celestial\", \"Selvyn Deuteronic\", \"Selvyn Eclipse\",\r\n           \"Selvyn Floral\", \"Selvyn Galactia\", \"Selvyn Heliosphere\", \"Selvyn Interstella\", \"Selvyn Jupiter\", \"Selvyn Koronis\", \"Selvyn Lunatic\",\r\n\r\n           \"Richard Astronomica\", \"Richard Borealis\", \"Richard Celestial\", \"Richard Deuteronic\", \"Richard Eclipse\",\r\n           \"Richard Floral\", \"Richard Galactia\", \"Richard Heliosphere\", \"Richard Interstella\", \"Richard Jupiter\", \"Richard Koronis\", \"Richard Lunatic\",\r\n\r\n           \"Lina Astronomica\", \"Lina Borealis\", \"Lina Celestial\", \"Lina Deuteronic\", \"Lina Eclipse\",\r\n           \"Lina Floral\", \"Lina Galactia\", \"Lina Heliosphere\", \"Lina Interstella\", \"Lina Jupiter\", \"Lina Koronis\", \"Lina Lunatic\",\r\n\r\n           \"John Astronomica\", \"John Borealis\", \"John Celestial\", \"John Deuteronic\", \"John Eclipse\",\r\n           \"John Floral\", \"John Galactia\", \"John Heliosphere\", \"John Interstella\", \"John Jupiter\", \"John Koronis\", \"John Lunatic\",\r\n\r\n           \"Nidia Astronomica\", \"Nidia Borealis\", \"Nidia Celestial\", \"Nidia Deuteronic\", \"Nidia Eclipse\",\r\n           \"Nidia Floral\", \"Nidia Galactia\", \"Nidia Heliosphere\", \"Nidia Interstella\", \"Nidia Jupiter\", \"Nidia Koronis\", \"Nidia Lunatic\"],\r\n             datasets: [\r\n               {\r\n                 backgroundColor: 'rgba(255,99,132,0.2)',\r\n                 borderColor: 'rgba(255,99,132,1)',\r\n                 borderWidth: 1,\r\n                 hoverBackgroundColor: 'rgba(255,99,132,0.4)',\r\n                 hoverBorderColor: 'rgba(255,99,132,1)',\r\n                 data: this.state.endingDealersData\r\n               }\r\n             ]\r\n           },\r\n        realisedDealers : {\r\n               labels: [\"Lewis\", \"Selvyn\", \"Richard\", \"Lina\", \"John\", \"Nidia\"],\r\n               datasets: [\r\n                 {\r\n                   backgroundColor: 'rgba(255,99,132,0.2)',\r\n                   borderColor: 'rgba(255,99,132,1)',\r\n                   borderWidth: 1,\r\n                   hoverBackgroundColor: 'rgba(255,99,132,0.4)',\r\n                   hoverBorderColor: 'rgba(255,99,132,1)',\r\n                   data: this.state.realisedDealersData\r\n                 }\r\n               ]\r\n           },\r\n        effectiveDealers : {\r\n               labels: [\"Lewis\", \"Selvyn\", \"Richard\", \"Lina\", \"John\", \"Nidia\"],\r\n               datasets: [\r\n                 {\r\n                   backgroundColor: 'rgba(255,99,132,0.2)',\r\n                   borderColor: 'rgba(255,99,132,1)',\r\n                   borderWidth: 1,\r\n                   hoverBackgroundColor: 'rgba(255,99,132,0.4)',\r\n                   hoverBorderColor: 'rgba(255,99,132,1)',\r\n                   data: this.state.effectiveDealersData\r\n                 }\r\n               ]\r\n           },\r\n        endingAggregated : {\r\n           labels: [\"Astronomica\", \"Borealis\", \"Celestial\", \"Deuteronic\", \"Eclipse\",\r\n           \"Floral\", \"Galactia\", \"Heliosphere\", \"Interstella\", \"Jupiter\", \"Koronis\", \"Lunatic\"],\r\n           datasets: [\r\n               {\r\n               backgroundColor: 'rgba(255,99,132,0.2)',\r\n               borderColor: 'rgba(255,99,132,1)',\r\n               borderWidth: 1,\r\n               hoverBackgroundColor: 'rgba(255,99,132,0.4)',\r\n               hoverBorderColor: 'rgba(255,99,132,1)',\r\n               data: this.state.endingAggregatedData\r\n               }\r\n           ]\r\n         },\r\n        realisedAggregated : this.state.realisedAggregatedData,\r\n        effectiveAggregated : this.state.effectiveAggregatedData,\r\n        averageData : {\r\n               labels: [\"Astronomica\", \"Borealis\", \"Celestial\", \"Deuteronic\", \"Eclipse\",\r\n               \"Floral\", \"Galactia\", \"Heliosphere\", \"Interstella\", \"Jupiter\", \"Koronis\", \"Lunatic\"],\r\n               datasets: [\r\n                 {\r\n                   label: 'Buy price',\r\n                   fill: false,\r\n                   lineTension: 0.1,\r\n                   backgroundColor: 'rgba(255,192,192,0.4)',\r\n                   borderColor: 'rgba(255,192,192,1)',\r\n                   borderCapStyle: 'butt',\r\n                   borderDash: [],\r\n                   borderDashOffset: 0.0,\r\n                   borderJoinStyle: 'miter',\r\n                   pointBorderColor: 'rgba(255,192,192,1)',\r\n                   pointBackgroundColor: '#fff',\r\n                   pointBorderWidth: 1,\r\n                   pointHoverRadius: 5,\r\n                   pointHoverBackgroundColor: 'rgba(255,192,192,1)',\r\n                   pointHoverBorderColor: 'rgba(220,220,220,1)',\r\n                   pointHoverBorderWidth: 2,\r\n                   pointRadius: 1,\r\n                   pointHitRadius: 10,\r\n                   data: this.state.averageBuyData\r\n                 },\r\n                 {\r\n                   label: 'Sell price',\r\n                   fill: false,\r\n                   lineTension: 0.1,\r\n                   backgroundColor: 'rgba(75,192,192,0.4)',\r\n                   borderColor: 'rgba(75,192,192,1)',\r\n                   borderCapStyle: 'butt',\r\n                   borderDash: [],\r\n                   borderDashOffset: 0.0,\r\n                   borderJoinStyle: 'miter',\r\n                   pointBorderColor: 'rgba(75,192,192,1)',\r\n                   pointBackgroundColor: '#fff',\r\n                   pointBorderWidth: 1,\r\n                   pointHoverRadius: 5,\r\n                   pointHoverBackgroundColor: 'rgba(75,192,192,1)',\r\n                   pointHoverBorderColor: 'rgba(220,220,220,1)',\r\n                   pointHoverBorderWidth: 2,\r\n                   pointRadius: 1,\r\n                   pointHitRadius: 10,\r\n                   data: this.state.averageSellData\r\n                 }\r\n               ]\r\n           }\r\n         });\r\n    }\r\n\r\n    getChartsUrl(id){\r\n        switch(id){\r\n            case \"averageData\": return baseUrl + '/average';\r\n            case \"endingDealers\": return baseUrl + '/dealers_position';\r\n            case \"realisedDealers\": return baseUrl + '/realised_profit_loss_dealers';\r\n            case \"effectiveDealers\": return baseUrl + '/effective_profit_loss_dealers';\r\n            case \"endingAggregated\": return baseUrl + '/aggregated_ending';\r\n            case \"realisedAggregated\": return baseUrl + '/aggregated_effective';\r\n            case \"effectiveAggregated\": return baseUrl + '/aggregated_realised';\r\n        }\r\n    }\r\n\r\n    hideAll(){\r\n        document.getElementById('averageData').style.display = 'none';\r\n        document.getElementById('endingDealers').style.display = 'none';\r\n        document.getElementById('realisedDealers').style.display = 'none';\r\n        document.getElementById('effectiveDealers').style.display = 'none';\r\n        document.getElementById('endingAggregated').style.display = 'none';\r\n        document.getElementById('realisedAggregated').style.display = 'none';\r\n        document.getElementById('effectiveAggregated').style.display = 'none';\r\n    }\r\n\r\n    handleChartDataSubmit = event => {\r\n        this.hideAll();\r\n        var sel = document.getElementById(\"charts\");\r\n        var id = sel.options[sel.selectedIndex].value;\r\n        document.getElementById('loader').style.display = 'block';\r\n        var url = this.getChartsUrl(id);\r\n        fetch(url, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n              start: document.getElementsByClassName(\"react-datetime-picker__inputGroup\")[0].children[0].value,\r\n              end: document.getElementsByClassName(\"react-datetime-picker__inputGroup\")[1].children[0].value,\r\n            }),\r\n            mode: \"cors\"\r\n        })\r\n        .then((response) => response.json())\r\n        .then((result) => {\r\n            console.log(url);\r\n            switch(url){\r\n              case  baseUrl + '/average' : {\r\n                this.setState({\r\n                  averageData : {\r\n                         labels: [\"Astronomica\", \"Borealis\", \"Celestial\", \"Deuteronic\", \"Eclipse\",\r\n                         \"Floral\", \"Galactia\", \"Heliosphere\", \"Interstella\", \"Jupiter\", \"Koronis\", \"Lunatic\"],\r\n                         datasets: [\r\n                           {\r\n                             label: 'Buy price',\r\n                             fill: false,\r\n                             lineTension: 0.1,\r\n                             backgroundColor: 'rgba(255,192,192,0.4)',\r\n                             borderColor: 'rgba(255,192,192,1)',\r\n                             borderCapStyle: 'butt',\r\n                             borderDash: [],\r\n                             borderDashOffset: 0.0,\r\n                             borderJoinStyle: 'miter',\r\n                             pointBorderColor: 'rgba(255,192,192,1)',\r\n                             pointBackgroundColor: '#fff',\r\n                             pointBorderWidth: 1,\r\n                             pointHoverRadius: 5,\r\n                             pointHoverBackgroundColor: 'rgba(255,192,192,1)',\r\n                             pointHoverBorderColor: 'rgba(220,220,220,1)',\r\n                             pointHoverBorderWidth: 2,\r\n                             pointRadius: 1,\r\n                             pointHitRadius: 10,\r\n                             data: result.averageBuy\r\n                           },\r\n                           {\r\n                             label: 'Sell price',\r\n                             fill: false,\r\n                             lineTension: 0.1,\r\n                             backgroundColor: 'rgba(75,192,192,0.4)',\r\n                             borderColor: 'rgba(75,192,192,1)',\r\n                             borderCapStyle: 'butt',\r\n                             borderDash: [],\r\n                             borderDashOffset: 0.0,\r\n                             borderJoinStyle: 'miter',\r\n                             pointBorderColor: 'rgba(75,192,192,1)',\r\n                             pointBackgroundColor: '#fff',\r\n                             pointBorderWidth: 1,\r\n                             pointHoverRadius: 5,\r\n                             pointHoverBackgroundColor: 'rgba(75,192,192,1)',\r\n                             pointHoverBorderColor: 'rgba(220,220,220,1)',\r\n                             pointHoverBorderWidth: 2,\r\n                             pointRadius: 1,\r\n                             pointHitRadius: 10,\r\n                             data: result.averageSell\r\n                           }\r\n                         ]\r\n                     }\r\n                });\r\n                document.getElementById('averageData').style.display = 'block';\r\n                break;\r\n              }\r\n              case  baseUrl + '/dealers_position' : {\r\n                this.setState({\r\n                  endingDealers : {\r\n                       labels: [\"Lewis Astronomica\", \"Lewis Borealis\", \"Lewis Celestial\", \"Lewis Deuteronic\", \"Lewis Eclipse\",\r\n                     \"Lewis Floral\", \"Lewis Galactia\", \"Lewis Heliosphere\", \"Lewis Interstella\", \"Lewis Jupiter\", \"Lewis Koronis\", \"Lewis Lunatic\",\r\n\r\n                     \"Selvyn Astronomica\", \"Selvyn Borealis\", \"Selvyn Celestial\", \"Selvyn Deuteronic\", \"Selvyn Eclipse\",\r\n                     \"Selvyn Floral\", \"Selvyn Galactia\", \"Selvyn Heliosphere\", \"Selvyn Interstella\", \"Selvyn Jupiter\", \"Selvyn Koronis\", \"Selvyn Lunatic\",\r\n\r\n                     \"Richard Astronomica\", \"Richard Borealis\", \"Richard Celestial\", \"Richard Deuteronic\", \"Richard Eclipse\",\r\n                     \"Richard Floral\", \"Richard Galactia\", \"Richard Heliosphere\", \"Richard Interstella\", \"Richard Jupiter\", \"Richard Koronis\", \"Richard Lunatic\",\r\n\r\n                     \"Lina Astronomica\", \"Lina Borealis\", \"Lina Celestial\", \"Lina Deuteronic\", \"Lina Eclipse\",\r\n                     \"Lina Floral\", \"Lina Galactia\", \"Lina Heliosphere\", \"Lina Interstella\", \"Lina Jupiter\", \"Lina Koronis\", \"Lina Lunatic\",\r\n\r\n                     \"John Astronomica\", \"John Borealis\", \"John Celestial\", \"John Deuteronic\", \"John Eclipse\",\r\n                     \"John Floral\", \"John Galactia\", \"John Heliosphere\", \"John Interstella\", \"John Jupiter\", \"John Koronis\", \"John Lunatic\",\r\n\r\n                     \"Nidia Astronomica\", \"Nidia Borealis\", \"Nidia Celestial\", \"Nidia Deuteronic\", \"Nidia Eclipse\",\r\n                     \"Nidia Floral\", \"Nidia Galactia\", \"Nidia Heliosphere\", \"Nidia Interstella\", \"Nidia Jupiter\", \"Nidia Koronis\", \"Nidia Lunatic\"],\r\n                       datasets: [\r\n                         {\r\n                           label: 'Ending profit/loss',\r\n                           backgroundColor: 'rgba(255,99,132,0.2)',\r\n                           borderColor: 'rgba(255,99,132,1)',\r\n                           borderWidth: 1,\r\n                           hoverBackgroundColor: 'rgba(255,99,132,0.4)',\r\n                           hoverBorderColor: 'rgba(255,99,132,1)',\r\n                           data: result.endingDealers\r\n                         }\r\n                       ]\r\n                     },\r\n                });\r\n                document.getElementById('endingDealers').style.display = 'block';\r\n                break;\r\n              }\r\n              case baseUrl + '/realised_profit_loss_dealers' : {\r\n                this.setState({\r\n                  realisedDealers : {\r\n                         labels: [\"Lewis\", \"Selvyn\", \"Richard\", \"Lina\", \"John\", \"Nidia\"],\r\n                         datasets: [\r\n                           {\r\n                             label: 'Realised profit/loss',\r\n                             backgroundColor: 'rgba(255,99,132,0.2)',\r\n                             borderColor: 'rgba(255,99,132,1)',\r\n                             borderWidth: 1,\r\n                             hoverBackgroundColor: 'rgba(255,99,132,0.4)',\r\n                             hoverBorderColor: 'rgba(255,99,132,1)',\r\n                             data: result.realisedDealers\r\n                           }\r\n                         ]\r\n                     },\r\n                });\r\n                document.getElementById('realisedDealers').style.display = 'block';\r\n                break;\r\n              }\r\n              case  baseUrl + '/effective_profit_loss_dealers' : {\r\n                this.setState({\r\n                  effectiveDealers : {\r\n                         labels: [\"Lewis\", \"Selvyn\", \"Richard\", \"Lina\", \"John\", \"Nidia\"],\r\n                         datasets: [\r\n                           {\r\n                             label: 'Effective profit/loss',\r\n                             backgroundColor: 'rgba(255,99,132,0.2)',\r\n                             borderColor: 'rgba(255,99,132,1)',\r\n                             borderWidth: 1,\r\n                             hoverBackgroundColor: 'rgba(255,99,132,0.4)',\r\n                             hoverBorderColor: 'rgba(255,99,132,1)',\r\n                             data: result.effectiveDealers\r\n                           }\r\n                         ]\r\n                     },\r\n                });\r\n                document.getElementById('effectiveDealers').style.display = 'block';\r\n                break;\r\n              }\r\n              case baseUrl + '/aggregated_ending' : {\r\n                this.setState({\r\n                  endingAggregated : {\r\n                     labels: [\"Astronomica\", \"Borealis\", \"Celestial\", \"Deuteronic\", \"Eclipse\",\r\n                     \"Floral\", \"Galactia\", \"Heliosphere\", \"Interstella\", \"Jupiter\", \"Koronis\", \"Lunatic\"],\r\n                     datasets: [\r\n                         {\r\n                         label: 'Aggregated ending',\r\n                         backgroundColor: 'rgba(255,99,132,0.2)',\r\n                         borderColor: 'rgba(255,99,132,1)',\r\n                         borderWidth: 1,\r\n                         hoverBackgroundColor: 'rgba(255,99,132,0.4)',\r\n                         hoverBorderColor: 'rgba(255,99,132,1)',\r\n                         data: result.endingAggregated\r\n                         }\r\n                     ]\r\n                   },\r\n                });\r\n                document.getElementById('endingAggregated').style.display = 'block';\r\n                break;\r\n              }\r\n              case  baseUrl + '/aggregated_effective' : {\r\n                this.setState({\r\n                  effectiveAggregatedData: result.effectiveAggregated,\r\n                });\r\n                document.getElementById('effectiveAggregated').style.display = 'block';\r\n                break;\r\n              }\r\n              case baseUrl + '/aggregated_realised' : {\r\n                this.setState({\r\n                  realisedAggregatedData: result.realisedAggregated,\r\n                });\r\n                document.getElementById('realisedAggregated').style.display = 'block';\r\n                break;\r\n              }\r\n            }\r\n            document.getElementById('loader').style.display = 'none';\r\n        },\r\n        (error) => {\r\n            console.log(\"ERROR in charts \" + error);\r\n            document.getElementById('loader').style.display = 'none';\r\n        }\r\n        );\r\n    }\r\n\r\n\r\n\r\n\r\n    renderSuccess() {\r\n        return (\r\n            <div>\r\n            <TableData/>\r\n            <div style={{alignItems:'center', textAlign:'center'}}>\r\n            <select id=\"charts\" onChange={this.handleChartDataSubmit} style={{width:'100%', marginTop:'10px'}}>\r\n                <option disabled selected value> -- select an option -- </option>\r\n                <option value=\"averageData\">Average buy and sell prices for each instrument during the period</option>\r\n                <option value=\"endingDealers\">Ending positions for each dealer</option>\r\n                <option value=\"realisedDealers\">Realised profit/loss for each dealer</option>\r\n                <option value=\"effectiveDealers\">Effective profit/loss for each dealer</option>\r\n                <option value=\"endingAggregated\">Ending positions aggregated for all dealers</option>\r\n                <option value=\"realisedAggregated\">Realised profit/loss for aggregated for all dealers</option>\r\n                <option value=\"effectiveAggregated\">Effective profit/loss aggregated for all dealers</option>\r\n            </select>\r\n            <div style={{display: 'inline-flex', marginTop: '10px', enabled: false, pointerEvents:'none'}}>\r\n                <p style={{marginLeft:'10px', marginRight:'10px'}}>Start</p>\r\n                <DateTimePicker style={{marginLeft:'10px', marginRight:'10px', enabled: false}}\r\n                    amPmAriaLabel=\"Select AM/PM\"\r\n                    calendarAriaLabel=\"Toggle calendar\"\r\n                    clearAriaLabel=\"Clear value\"\r\n                    dayAriaLabel=\"Day\"\r\n                    hourAriaLabel=\"Hour\"\r\n                    maxDetail=\"second\"\r\n                    minuteAriaLabel=\"Minute\"\r\n                    monthAriaLabel=\"Month\"\r\n                    nativeInputAriaLabel=\"Date and time\"\r\n                    secondAriaLabel=\"Second\"\r\n                    value={new Date() - 1000 * 3600 * 24 * 365} // 1 year before today\r\n                    yearAriaLabel=\"Year\"/>\r\n                <p style={{marginLeft:'10px', marginRight:'10px'}}>End</p>\r\n                <DateTimePicker style={{marginLeft:'10px', marginRight:'10px', enabled: false}}\r\n                    amPmAriaLabel=\"Select AM/PM\"\r\n                    calendarAriaLabel=\"Toggle calendar\"\r\n                    clearAriaLabel=\"Clear value\"\r\n                    dayAriaLabel=\"Day\"\r\n                    hourAriaLabel=\"Hour\"\r\n                    maxDetail=\"second\"\r\n                    minuteAriaLabel=\"Minute\"\r\n                    monthAriaLabel=\"Month\"\r\n                    nativeInputAriaLabel=\"Date and time\"\r\n                    secondAriaLabel=\"Second\"\r\n                    value={Date()}\r\n                    yearAriaLabel=\"Year\"/>\r\n            </div>\r\n            <div id=\"loader\" style={{marginTop:'10px', display:'none'}} >\r\n                <Loader type=\"Oval\" color=\"#0018A8\" height={80} width={80}/>\r\n            </div>\r\n            <div>\r\n                <div id=\"averageData\" style={{display:'none'}}>\r\n                    <h4>Average buy and sell prices for each instrument during the period</h4>\r\n                    <Line data={this.state.averageData}\r\n                    width={100}\r\n                    height={50}/>\r\n                </div>\r\n                <div id=\"endingDealers\" style={{display:'none'}}>\r\n                    <h4>Ending positions for each dealer</h4>\r\n                    <Bar\r\n                    data={this.state.endingDealers}\r\n                    width={100}\r\n                    height={50}\r\n                    />\r\n                </div>\r\n                <div id=\"realisedDealers\" style={{display:'none'}}>\r\n                    <h4>Realised profit/loss for each dealer</h4>\r\n                    <Bar\r\n                    data={this.state.realisedDealers}\r\n                    width={100}\r\n                    height={50}\r\n                    />\r\n                </div>\r\n                <div id=\"effectiveDealers\" style={{display:'none'}}>\r\n                    <h4>Effective profit/loss for each dealer</h4>\r\n                    <Bar\r\n                    data={this.state.effectiveDealers}\r\n                    width={100}\r\n                    height={50}\r\n                    />\r\n                </div>\r\n                <div id=\"endingAggregated\" style={{display:'none'}}>\r\n                    <h4>Ending positions aggregated for all dealers</h4>\r\n                    <Bar\r\n                    data={this.state.endingAggregated}\r\n                    width={100}\r\n                    height={50}\r\n                    />\r\n                </div>\r\n                <div id=\"realisedAggregated\" style={{display:'none'}}>\r\n                    <h4>Realised profit/loss for aggregated for all dealers</h4>\r\n                    <p>{this.state.realisedAggregatedData}</p>\r\n                </div>\r\n                <div id=\"effectiveAggregated\" style={{display:'none'}}>\r\n                    <h4>Effective profit/loss aggregated for all dealers</h4>\r\n                    <p>{this.state.effectiveAggregatedData}</p>\r\n                </div>\r\n            </div>\r\n          </div>\r\n          </div>\r\n        )\r\n    }\r\n\r\n    renderFail() {\r\n        return (\r\n            <div>\r\n                <p>Connection Fail!</p>\r\n                <NavLink to={{pathname: \"/\"}} > Retry </NavLink>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        try {\r\n            if (this.props.location && this.props.location.state.status) {\r\n                console.log(this.props.location.state);\r\n                return this.renderSuccess()\r\n            }\r\n            else {\r\n                console.log(this.props.location);\r\n                return this.renderFail()\r\n            }\r\n        }\r\n        catch (TypeError) {\r\n            this.props.history.push('/');\r\n            return (\"Please login again\");\r\n        }\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport NotFound from \"./containers/NotFound\";\r\nimport Login from \"./containers/Login\"\r\nimport DisplayData from \"./containers/DisplayData\"\r\n\r\nexport default () =>\r\n  <Switch>\r\n    <Route path=\"/\" exact component={Login} />\r\n    <Route path=\"/displaydata\" exact component={DisplayData}/>\r\n    <Route component={NotFound} />\r\n  </Switch>;\r\n","import React, { Component } from \"react\";\r\nimport { Navbar} from \"react-bootstrap\";\r\nimport \"./App.css\";\r\nimport Routes from \"./Routes\";\r\n\r\nclass App extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App container\">\r\n        <Navbar fluid collapseOnSelect style={{background:'#0018A8'}}>\r\n          <Navbar.Header>\r\n            <Navbar.Brand style={{color: 'white'}}>\r\n            DB.Deals\r\n              {/* <Link to=\"/\" style={{color: 'white'}}>DB.Deals</Link> */}\r\n            </Navbar.Brand>\r\n          </Navbar.Header>\r\n        </Navbar>\r\n        <Routes />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\"\r\n\r\nReactDOM.render(\r\n    <Router>\r\n      <App />\r\n    </Router>,\r\n    document.getElementById(\"root\")\r\n  );\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}